const markdown = "# 悦文\n一个能说会道的博客，支持 Markdown 写文章，还可以评论收藏。为了追求新技术，踩了不少坑，还好没放弃，差点就放弃了。前端采用 React + React-Router + React-Redux，后端抛弃 php，采用 Node.js，框架选用 Koa2 + Next.js，数据库采用 Mongodb，全文检索采用 Elasticsearch，API 完全符合 RESTful 设计风格。\n\n## 环境准备\n- MongoDB   v3.4.5\n- Node.js   v8.1.0\n- Elasticsearch v5.5.1\n\n### Elasticsearch\n1. 下载 [Elasticsearch](https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.1.zip)\n2. 下载中文分词器`ik`, elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.1/elasticsearch-analysis-ik-5.5.1.zip\n3. 解压后进入到 bin 目录，双击 elasticsearch.bat 运行\n4. 打开浏览器访问 http://localhost:9200/\n5. 新建索引 yue, 并设置 type 为 articles，设置字段 markdown 和 title 分词器为 ik_max_word\n```\n$ curl -X PUT 'localhost:9200/accounts' -d '\n{\n  \"mappings\": {\n    \"articles\": {\n      \"properties\": {\n        \"markdown\": {\n          \"type\": \"text\",\n          \"analyzer\": \"ik_max_word\",\n          \"search_analyzer\": \"ik_max_word\"\n     \},\n        \"title\": {\n          \"type\": \"text\",\n          \"analyzer\": \"ik_max_word\",\n          \"search_analyzer\": \"ik_max_word\"\n        }\n      }\n    }\n  }\n}'\n```\n\n### mongo-connector\n```\n1. pip install mongo-connector -i https://pypi.douban.com/simple\n2. pip install elastic2-doc-manager -i https://pypi.douban.com/simple\n3. pip install elastic-doc-manager[elastic2] -i https://pypi.douban.com/simple\n4. pip install elastic-doc-manager[elastic5] -i https://pypi.douban.com/simple\n```\n\n### 启动 MongoDB 服务器\n创建 MongoDB 数据存储目录 `f:/mongodb/data/db`\n```\nmongod --dbpath f:/mongodb/data/db --replSet rs0 --auth\n```\n\n### 同步 MongoDB 数据到 elasticsearch\n```\nmongo-connector -m localhost:27017 -t localhost:9200 -d elastic2_doc_manager -n yue.articles\n```\n\n### 安装依赖\n```\nnpm install\n```\n\n### mock 数据\n```\nnpm run mock\n```\n\n### 开发调试\n```\nnpm run dev\n```\n\n### 生产发布\n```\nnpm run build -- 打包\nnpm start     -- 启动\n```\n\n## RESTful API\n### 成功返回值\nhttp 状态码有以下几种\n- 200： [GET] 服务器成功返回用户请求的数据\n- 201： [POST/PUT/PATCH] 用户新建或修改数据成功\n- 204： [DELETE] 用户删除数据成功\n\n```json\n{\n  \"username\": \"joy\",\n  \"email\": \"joy@example.com\"\n}\n```\n\n### 失败返回值\nhttp 状态码有以下几种\n- 404： 用户发出的请求针对的是不存在的记录，服务器没有进行操作\n- 401： 用户没有权限, 如未登录\n- 403： 用户已经得到授权，但没有权限访问指定资源\n- 500： 服务器错误\n\n```json\n{\n  \"message\": \"错误消息\",\n  \"error\": \"详细错误信息，可选\"\n}\n```\n";

const html = "<h1><!-- react-text: 56 -->悦文<!-- /react-text --></h1><p><!-- react-text: 58 -->一个能说会道的博客，支持 Markdown 写文章，还可以评论收藏。为了追求新技术，踩了不少坑，还好没放弃，差点就放弃了。前端采用 React + React-Router + React-Redux，后端抛弃 php，采用 Node.js，框架选用 Koa2 + Next.js，数据库采用 Mongodb，全文检索采用 Elasticsearch，API 完全符合 RESTful 设计风格。<!-- /react-text --></p><h2><!-- react-text: 60 -->环境准备<!-- /react-text --></h2><ul><li><!-- react-text: 63 -->MongoDB   v3.4.5<!-- /react-text --></li><li><!-- react-text: 65 -->Node.js   v8.1.0<!-- /react-text --></li><li><!-- react-text: 67 -->Elasticsearch v5.5.1<!-- /react-text --></li></ul><h3><!-- react-text: 69 -->Elasticsearch<!-- /react-text --></h3><ol><li><!-- react-text: 72 -->下载 <!-- /react-text --><a href=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.1.zip\"><!-- react-text: 74 -->Elasticsearch<!-- /react-text --></a></li><li><!-- react-text: 76 -->下载中文分词器<!-- /react-text --><code>ik</code><!-- react-text: 78 -->, elasticsearch-plugin install <!-- /react-text --><a href=\"https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.1/elasticsearch-analysis-ik-5.5.1.zip\"><!-- react-text: 80 -->https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.1/elasticsearch-analysis-ik-5.5.1.zip<!-- /react-text --></a></li><li><!-- react-text: 82 -->解压后进入到 bin 目录，双击 elasticsearch.bat 运行<!-- /react-text --></li><li><!-- react-text: 84 -->打开浏览器访问 <!-- /react-text --><a href=\"http://localhost:9200/\"><!-- react-text: 86 -->http://localhost:9200/<!-- /react-text --></a></li><li><!-- react-text: 88 -->新建索引 yue, 并设置 type 为 articles，设置字段 markdown 和 title 分词器为 ik_max_word<!-- /react-text --></li></ol><pre><code class=\"hljs scilab\">$ curl -X PUT <span class=\"hljs-string\"><span class=\"hljs-string\">'localhost:9200/accounts'</span></span> -d <span class=\"hljs-string\"><span class=\"hljs-string\">'\n{\n  \"</span></span>mappings<span class=\"hljs-string\"><span class=\"hljs-string\">\": {\n    \"</span></span>articles<span class=\"hljs-string\"><span class=\"hljs-string\">\": {\n      \"</span></span>properties<span class=\"hljs-string\"><span class=\"hljs-string\">\": {\n        \"</span></span>markdown<span class=\"hljs-string\"><span class=\"hljs-string\">\": {\n          \"</span></span><span class=\"hljs-built_in\"><span class=\"hljs-built_in\">type</span></span><span class=\"hljs-string\"><span class=\"hljs-string\">\": \"</span></span>text<span class=\"hljs-string\"><span class=\"hljs-string\">\",\n          \"</span></span>analyzer<span class=\"hljs-string\"><span class=\"hljs-string\">\": \"</span></span>ik_max_word<span class=\"hljs-string\"><span class=\"hljs-string\">\",\n          \"</span></span>search_analyzer<span class=\"hljs-string\"><span class=\"hljs-string\">\": \"</span></span>ik_max_word<span class=\"hljs-string\"><span class=\"hljs-string\">\"\n        },\n        \"</span></span>title<span class=\"hljs-string\"><span class=\"hljs-string\">\": {\n          \"</span></span><span class=\"hljs-built_in\"><span class=\"hljs-built_in\">type</span></span><span class=\"hljs-string\"><span class=\"hljs-string\">\": \"</span></span>text<span class=\"hljs-string\"><span class=\"hljs-string\">\",\n          \"</span></span>analyzer<span class=\"hljs-string\"><span class=\"hljs-string\">\": \"</span></span>ik_max_word<span class=\"hljs-string\"><span class=\"hljs-string\">\",\n          \"</span></span>search_analyzer<span class=\"hljs-string\"><span class=\"hljs-string\">\": \"</span></span>ik_max_word<span class=\"hljs-string\"><span class=\"hljs-string\">\"\n        }\n      }\n    }\n  }\n}'</span></span></code></pre><h3><!-- react-text: 92 -->mongo-connector<!-- /react-text --></h3><pre><code class=\"hljs stylus\"><span class=\"hljs-number\"><span class=\"hljs-number\">1</span></span>. pip install mongo-connector -<span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">i</span></span> https:<span class=\"hljs-comment\"><span class=\"hljs-comment\">//pypi.douban.com/simple</span></span>\n<span class=\"hljs-number\"><span class=\"hljs-number\">2</span></span>. pip install elastic2-doc-manager -<span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">i</span></span> https:<span class=\"hljs-comment\"><span class=\"hljs-comment\">//pypi.douban.com/simple</span></span>\n<span class=\"hljs-number\"><span class=\"hljs-number\">3</span></span>. pip install elastic-doc-manager[elastic2] -<span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">i</span></span> https:<span class=\"hljs-comment\"><span class=\"hljs-comment\">//pypi.douban.com/simple</span></span>\n<span class=\"hljs-number\"><span class=\"hljs-number\">4</span></span>. pip install elastic-doc-manager[elastic5] -<span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">i</span></span> https:<span class=\"hljs-comment\"><span class=\"hljs-comment\">//pypi.douban.com/simple</span></span></code></pre><h3><!-- react-text: 96 -->启动 MongoDB 服务器<!-- /react-text --></h3><p><!-- react-text: 98 -->创建 MongoDB 数据存储目录 <!-- /react-text --><code>f:/mongodb/data/db</code></p><pre><code class=\"hljs jboss-cli\">mongod <span class=\"hljs-params\"><span class=\"hljs-params\">--dbpath</span></span> f:<span class=\"hljs-string\"><span class=\"hljs-string\">/mongodb/data/db</span></span> <span class=\"hljs-params\"><span class=\"hljs-params\">--replSet</span></span> rs0 <span class=\"hljs-params\"><span class=\"hljs-params\">--auth</span></span></code></pre><h3><!-- react-text: 103 -->同步 MongoDB 数据到 elasticsearch<!-- /react-text --></h3><pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">mongo-connector</span></span> <span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">-m</span></span> <span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">localhost</span></span><span class=\"hljs-selector-pseudo\"><span class=\"hljs-selector-pseudo\">:27017</span></span> <span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">-t</span></span> <span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">localhost</span></span><span class=\"hljs-selector-pseudo\"><span class=\"hljs-selector-pseudo\">:9200</span></span> <span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">-d</span></span> <span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">elastic2_doc_manager</span></span> <span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">-n</span></span> <span class=\"hljs-selector-tag\"><span class=\"hljs-selector-tag\">yue</span></span><span class=\"hljs-selector-class\"><span class=\"hljs-selector-class\">.articles</span></span></code></pre><h3><!-- react-text: 107 -->安装依赖<!-- /react-text --></h3><pre><code class=\"hljs cmake\">npm <span class=\"hljs-keyword\"><span class=\"hljs-keyword\">install</span></span></code></pre><h3><!-- react-text: 111 -->mock 数据<!-- /react-text --></h3><pre><code class=\"hljs dockerfile\">npm <span class=\"hljs-keyword\"><span class=\"hljs-keyword\">run</span></span><span class=\"bash\"><span class=\"bash\"> mock</span></span></code></pre><h3><!-- react-text: 115 -->开发调试<!-- /react-text --></h3><pre><code class=\"hljs dockerfile\">npm <span class=\"hljs-keyword\"><span class=\"hljs-keyword\">run</span></span><span class=\"bash\"><span class=\"bash\"> dev</span></span></code></pre><h3><!-- react-text: 119 -->生产发布<!-- /react-text --></h3><pre><code class=\"hljs applescript\">npm <span class=\"hljs-built_in\"><span class=\"hljs-built_in\">run</span></span> build <span class=\"hljs-comment\"><span class=\"hljs-comment\">-- 打包</span></span>\nnpm start     <span class=\"hljs-comment\"><span class=\"hljs-comment\">-- 启动</span></span></code></pre><h2><!-- react-text: 123 -->RESTful API<!-- /react-text --></h2><h3><!-- react-text: 125 -->成功返回值<!-- /react-text --></h3><p><!-- react-text: 127 -->http 状态码有以下几种<!-- /react-text --></p><ul><li><!-- react-text: 130 -->200： <!-- /react-text --><a href=\"\"><!-- react-text: 132 -->GET<!-- /react-text --></a><!-- react-text: 133 --> 服务器成功返回用户请求的数据<!-- /react-text --></li><li><!-- react-text: 135 -->201： <!-- /react-text --><a href=\"\"><!-- react-text: 137 -->POST/PUT/PATCH<!-- /react-text --></a><!-- react-text: 138 --> 用户新建或修改数据成功<!-- /react-text --></li><li><!-- react-text: 140 -->204： <!-- /react-text --><a href=\"\"><!-- react-text: 142 -->DELETE<!-- /react-text --></a><!-- react-text: 143 --> 用户删除数据成功<!-- /react-text --></li></ul><pre><code class=\"hljs json\">{\n  <span class=\"hljs-attr\"><span class=\"hljs-attr\">\"username\"</span></span>: <span class=\"hljs-string\"><span class=\"hljs-string\">\"joy\"</span></span>,\n  <span class=\"hljs-attr\"><span class=\"hljs-attr\">\"email\"</span></span>: <span class=\"hljs-string\"><span class=\"hljs-string\">\"joy@example.com\"</span></span>\n}</code></pre><h3><!-- react-text: 147 -->失败返回值<!-- /react-text --></h3><p><!-- react-text: 149 -->http 状态码有以下几种<!-- /react-text --></p><ul><li><!-- react-text: 152 -->404： 用户发出的请求针对的是不存在的记录，服务器没有进行操作<!-- /react-text --></li><li><!-- react-text: 154 -->401： 用户没有权限, 如未登录<!-- /react-text --></li><li><!-- react-text: 156 -->403： 用户已经得到授权，但没有权限访问指定资源<!-- /react-text --></li><li><!-- react-text: 158 -->500： 服务器错误<!-- /react-text --></li></ul><pre><code class=\"hljs json\">{\n  <span class=\"hljs-attr\"><span class=\"hljs-attr\">\"message\"</span></span>: <span class=\"hljs-string\"><span class=\"hljs-string\">\"错误消息\"</span></span>,\n  <span class=\"hljs-attr\"><span class=\"hljs-attr\">\"error\"</span></span>: <span class=\"hljs-string\"><span class=\"hljs-string\">\"详细错误信息，可选\"</span></span>\n}</code></pre>";

const excerpt = "为了追求新技术，踩了不少坑，还好没放弃，差点就放弃了。前端采用 React + React-Router + React-Redux，后端抛弃 php，采用 Node.js，框架选用 Koa2 + Next.js，数据库采用 Mongodb，全文检索采用 Elasticsearch，API 完全符合 RESTful 设计风格";

module.exports = { html, markdown, excerpt };
